/*
 * Copyright (c) 2015-2016, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 *  ======== package.bld ========
 */

var fontSourceList = [
    "./fonts/fontfixed6x8.c"
    /* Add more fonts here */
];

var grlibSourceList = fontSourceList.concat([
    "./circle.c",
    "./context.c",
    "./image.c",
    "./line.c",
    "./rectangle.c",
    "./string.c"
]);

var grlibHdrs = [
    "./grlib.h",
]

/* Get deviceWare directories from XDCARGS */
var xdcArgs = java.lang.System.getenv("XDCARGS");
var deviceWareOpts =
    xdc.loadCapsule("ti/drivers/xdcArgParser.xs").getDeviceWareOpts(xdcArgs);

if (deviceWareOpts.cc13xxware || deviceWareOpts.cc26xxware) {
    var targets = [
        "ti.targets.arm.elf.M3",
        "iar.targets.arm.M3",
        "gnu.targets.arm.M3"
    ];

    for each (var targetName in targets) {
        /* Only proceed if target already in Build object */
        if (Build.printBuildTargets().indexOf(targetName + "\n") < 0) {
            continue;
        }

        var target = xdc.module(targetName);
        target.profiles["release"].compileOpts.copts =
            target.profiles["release"].compileOpts.copts.replace("Ohs", "Ohz");
        var mwAttrs = {
            copts: " -I. -Dxdc_runtime_Log_DISABLE_ALL -Dxdc_runtime_Assert_DISABLE_ALL",
        };

        var lib = Pkg.addLibrary("lib/grlib", target, mwAttrs);
        lib.addObjects(grlibSourceList);
    }

    Pkg.attrs.exportAll = true;
}
else {
    Pkg.releasePrefix = "./";
}
